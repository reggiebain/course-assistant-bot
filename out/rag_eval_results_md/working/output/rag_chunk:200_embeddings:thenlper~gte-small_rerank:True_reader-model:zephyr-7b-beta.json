[{"question": "What is the course code for the Introduction to Computer Programming course?\n", "true_answer": "COMP_SCI 110", "source_doc": "/kaggle/input/course-bot-data/documents/cbain_syllabus.md", "generated_answer": "\n<|system|>\nUsing the information contained in the context,\ngive a comprehensive answer to the question.\nRespond only to the question asked, response should be concise and relevant to the question.\nProvide the number of the source document when relevant.\nIf the answer cannot be deduced from the context, do not give an answer.</s>\n<|user|>\nContext:\n\nExtracted documents:\nDocument 0:::\nReminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course\n\nCS 110 is meant as an introduction to the key ideas of computer programming and assumes no prior programming knowledge. In this course, we'll use the programming language Python with two goals: first, we want to give you a sense of the kinds of creative activities, both directed problem-solving and creative pursuits, that programming can support; and two, we want to introduce you to the fundamental constructs (and associated skills and techniques) of computer programming.Document 1:::\nThe second goal of the course is to introduce you to the fundamental constructs of computer programming and how to apply these low-level constructs in creative and useful ways. Learning a programming language is not dissimilar to learning a new spoken/written language\u2013first, you need to understand basic rules like grammar and syntax, then you need exemplar buildings blocks like adjectives, nouns, and prepositions, and only then can you use these ideas together to create computer programs. What this means is that you must dedicate enough time to practicing the basics in order to allow yourself to progressively move to more and more complex programming practice.Document 2:::\nlayout: two-column title: Syllabus permalink: /syllabus/\n\nTerm Spring 2024 Course COMP_SCI 110: Introduction to Computer Programming Prerequisites None Instructor Prof. Connor Bain (connor.bain@northwestern.edu) Lecture Time Monday, Wednesday, & Friday, 10:00am - 10:50am Lecture Location Lutkin Hall Required Materials Zero Cost Course \u2013 (All course materials are open educational resources)\n\nPlease note that this syllabus is subject to change prior to March 26, 2024.\n\nReminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the CourseDocument 3:::\n{:.blockquote-no-margin}\n\nTo register for the course edSTEM (you will only have to do this once), please use the link on Canvas.\n\nFor any other issues that you think are not appropriate for the peer mentors or graduate TA, please talk to Prof. Bain. This might include things like concerns about your progress in the course, questions about content from lectures, personal matters related to your participation in the course, larger grade concerns, advice about future courses, majors, and internships, etc.\n\nSupplementary Materials (optional)\n\nA Practical Introduction to Python Programming, by Brian Heinold\n\nPython for Everyone, by Chuck Severance\n\nHow to think like a Computer Scientist, by Peter Wentworth, Jeffrey Elkner, Allen B. Downey, and Chris Meyers\n\nPolicy on Academic HonestyDocument 4:::\nCourse Materials and Resources\n\nCourse Software\n\nAs this is a programming course, we will be using some free software programs and libraries in order to write, debug, and run Python programs. Installing and configuring this software can be a huge hassle, but it is part of the process of developing your computing proficiencies. There are many ways to install Python and its associated libraries on your computer, however, we can only provide support for the methods of installation described in class during Week 1. We will try our best to support student needs, but because of the large number of students in the course, we cannot feasibly support every method of installation.Document 5:::\nCourse Format\n\nWhile some of our reserved class periods will be used for interactive lectures where new concepts will be introduced, other days will be reserved for in-depth tutorials where students will be expected to review course materials (recorded lecture videos, slides, and notes) before the class period and during class we will work in small groups to complete an in-depth programming assignment.\n\nThe rough schedule of the course will be (there are some exceptions):\n\nMondays - Lecture Day\n\nWednesdays - Tutorial Day\n\nFridays - Practice Day\n\nFor lecture days, we'll have interactive lectures where we introduce a new topic and focus on building a core understanding. For Tutorial days, you'll work in your tutorial groups to complete an assignment during class time. On Practice+ days, we'll do a little more practice along with previewing the next components of the course.Document 6:::\nPlease note, you will need a computer capable of running Python 3+ in order to participate in this course. Any Windows/Mac/Linux computer from the last decade should be fine, however, you may encounter difficulties using a Chromebook, iPad, or other non-standard operating system. If you do not have access to the appropriate computing hardware, please let the course staff know as soon as possible so that we can help you make other arrangements.\n\nIf you are struggling to get Python and your code editor installed, this is (alas) normal (ask any software engineer). This is also one of the reasons why we have such a big course staff: to troubleshoot individual laptop problems with students.\n\nedSTEM\n\nedSTEM is a Question-and-Answer site like Piazza/Campuswire that allows students to ask questions that can then be answered by either Course Staff or other students in the course.\n---\nNow here is the question you need to answer.\n\nQuestion: What is the course code for the Introduction to Computer Programming course?\n\n</s>\n<|assistant|>\nThe course code for the Introduction to Computer Programming course is not explicitly stated in the provided context. However, it can be found in Document 2, which lists the course as COMP_SCI 110. Therefore, the course code for this specific course is COMP_SCI 110.", "retrieved_docs": ["Reminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course\n\nCS 110 is meant as an introduction to the key ideas of computer programming and assumes no prior programming knowledge. In this course, we'll use the programming language Python with two goals: first, we want to give you a sense of the kinds of creative activities, both directed problem-solving and creative pursuits, that programming can support; and two, we want to introduce you to the fundamental constructs (and associated skills and techniques) of computer programming.", "The second goal of the course is to introduce you to the fundamental constructs of computer programming and how to apply these low-level constructs in creative and useful ways. Learning a programming language is not dissimilar to learning a new spoken/written language\u2013first, you need to understand basic rules like grammar and syntax, then you need exemplar buildings blocks like adjectives, nouns, and prepositions, and only then can you use these ideas together to create computer programs. What this means is that you must dedicate enough time to practicing the basics in order to allow yourself to progressively move to more and more complex programming practice.", "layout: two-column title: Syllabus permalink: /syllabus/\n\nTerm Spring 2024 Course COMP_SCI 110: Introduction to Computer Programming Prerequisites None Instructor Prof. Connor Bain (connor.bain@northwestern.edu) Lecture Time Monday, Wednesday, & Friday, 10:00am - 10:50am Lecture Location Lutkin Hall Required Materials Zero Cost Course \u2013 (All course materials are open educational resources)\n\nPlease note that this syllabus is subject to change prior to March 26, 2024.\n\nReminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course", "{:.blockquote-no-margin}\n\nTo register for the course edSTEM (you will only have to do this once), please use the link on Canvas.\n\nFor any other issues that you think are not appropriate for the peer mentors or graduate TA, please talk to Prof. Bain. This might include things like concerns about your progress in the course, questions about content from lectures, personal matters related to your participation in the course, larger grade concerns, advice about future courses, majors, and internships, etc.\n\nSupplementary Materials (optional)\n\nA Practical Introduction to Python Programming, by Brian Heinold\n\nPython for Everyone, by Chuck Severance\n\nHow to think like a Computer Scientist, by Peter Wentworth, Jeffrey Elkner, Allen B. Downey, and Chris Meyers\n\nPolicy on Academic Honesty", "Course Materials and Resources\n\nCourse Software\n\nAs this is a programming course, we will be using some free software programs and libraries in order to write, debug, and run Python programs. Installing and configuring this software can be a huge hassle, but it is part of the process of developing your computing proficiencies. There are many ways to install Python and its associated libraries on your computer, however, we can only provide support for the methods of installation described in class during Week 1. We will try our best to support student needs, but because of the large number of students in the course, we cannot feasibly support every method of installation.", "Course Format\n\nWhile some of our reserved class periods will be used for interactive lectures where new concepts will be introduced, other days will be reserved for in-depth tutorials where students will be expected to review course materials (recorded lecture videos, slides, and notes) before the class period and during class we will work in small groups to complete an in-depth programming assignment.\n\nThe rough schedule of the course will be (there are some exceptions):\n\nMondays - Lecture Day\n\nWednesdays - Tutorial Day\n\nFridays - Practice Day\n\nFor lecture days, we'll have interactive lectures where we introduce a new topic and focus on building a core understanding. For Tutorial days, you'll work in your tutorial groups to complete an assignment during class time. On Practice+ days, we'll do a little more practice along with previewing the next components of the course.", "Please note, you will need a computer capable of running Python 3+ in order to participate in this course. Any Windows/Mac/Linux computer from the last decade should be fine, however, you may encounter difficulties using a Chromebook, iPad, or other non-standard operating system. If you do not have access to the appropriate computing hardware, please let the course staff know as soon as possible so that we can help you make other arrangements.\n\nIf you are struggling to get Python and your code editor installed, this is (alas) normal (ask any software engineer). This is also one of the reasons why we have such a big course staff: to troubleshoot individual laptop problems with students.\n\nedSTEM\n\nedSTEM is a Question-and-Answer site like Piazza/Campuswire that allows students to ask questions that can then be answered by either Course Staff or other students in the course."], "test_settings": "chunk:200_embeddings:thenlper~gte-small_rerank:True_reader-model:zephyr-7b-beta", "eval_score_gpt4": "5", "eval_feedback_gpt4": "The response provided is completely correct, accurate, and factual. It matches the reference answer and correctly identifies the course code for the Introduction to Computer Programming course as COMP_SCI 110, which is found in Document 2 of the provided context."}, {"question": "What is the purpose of edSTEM?\n", "true_answer": "edSTEM is a Question-and-Answer site like Piazza/Campuswire that allows students to ask questions that can then be answered by either Course Staff or other students in the course.", "source_doc": "/kaggle/input/course-bot-data/documents/cbain_syllabus.md", "generated_answer": "\n<|system|>\nUsing the information contained in the context,\ngive a comprehensive answer to the question.\nRespond only to the question asked, response should be concise and relevant to the question.\nProvide the number of the source document when relevant.\nIf the answer cannot be deduced from the context, do not give an answer.</s>\n<|user|>\nContext:\n\nExtracted documents:\nDocument 0:::\nPlease note, you will need a computer capable of running Python 3+ in order to participate in this course. Any Windows/Mac/Linux computer from the last decade should be fine, however, you may encounter difficulties using a Chromebook, iPad, or other non-standard operating system. If you do not have access to the appropriate computing hardware, please let the course staff know as soon as possible so that we can help you make other arrangements.\n\nIf you are struggling to get Python and your code editor installed, this is (alas) normal (ask any software engineer). This is also one of the reasons why we have such a big course staff: to troubleshoot individual laptop problems with students.\n\nedSTEM\n\nedSTEM is a Question-and-Answer site like Piazza/Campuswire that allows students to ask questions that can then be answered by either Course Staff or other students in the course.Document 1:::\n{:.blockquote-no-margin}\n\nTo register for the course edSTEM (you will only have to do this once), please use the link on Canvas.\n\nFor any other issues that you think are not appropriate for the peer mentors or graduate TA, please talk to Prof. Bain. This might include things like concerns about your progress in the course, questions about content from lectures, personal matters related to your participation in the course, larger grade concerns, advice about future courses, majors, and internships, etc.\n\nSupplementary Materials (optional)\n\nA Practical Introduction to Python Programming, by Brian Heinold\n\nPython for Everyone, by Chuck Severance\n\nHow to think like a Computer Scientist, by Peter Wentworth, Jeffrey Elkner, Allen B. Downey, and Chris Meyers\n\nPolicy on Academic HonestyDocument 2:::\nReminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course\n\nCS 110 is meant as an introduction to the key ideas of computer programming and assumes no prior programming knowledge. In this course, we'll use the programming language Python with two goals: first, we want to give you a sense of the kinds of creative activities, both directed problem-solving and creative pursuits, that programming can support; and two, we want to introduce you to the fundamental constructs (and associated skills and techniques) of computer programming.Document 3:::\nThe second goal of the course is to introduce you to the fundamental constructs of computer programming and how to apply these low-level constructs in creative and useful ways. Learning a programming language is not dissimilar to learning a new spoken/written language\u2013first, you need to understand basic rules like grammar and syntax, then you need exemplar buildings blocks like adjectives, nouns, and prepositions, and only then can you use these ideas together to create computer programs. What this means is that you must dedicate enough time to practicing the basics in order to allow yourself to progressively move to more and more complex programming practice.Document 4:::\nWellness and Mental Health\n\nNorthwestern University is committed to supporting the wellness of our students. Student Affairs has multiple resources to support student wellness and mental health. If you are feeling distressed or overwhelmed, please reach out for help. Students can access confidential resources through the Counseling and Psychological Services (CAPS), Religious and Spiritual Life (RSL) and the Center for Awareness, Response and Education (CARE). Additional information on all of the resources mentioned above can be found here:\n\nhttps://www.northwestern.edu/counseling/\n\nhttps://www.northwestern.edu/religious-life/\n\nhttps://www.northwestern.edu/care/\n\nCourse Materials and Resources\n\nCourse SoftwareDocument 5:::\nAccessibility\n\nNorthwestern University is committed to providing the most accessible learning environment as possible for students with disabilities. Should you anticipate or experience disability-related barriers in the academic setting, please contact AccessibleNU to move forward with the university\u2019s established accommodation process (e: accessiblenu@northwestern.edu; p: 847-467-5530). If you already have established accommodations with AccessibleNU, please let me know as soon as possible, preferably within the first two weeks of the term, so we can work together to implement your disability accommodations. Disability information, including academic accommodations, is confidential under the Family Educational Rights and Privacy Act.\n\nAll accommodation requests must be processed through AccessibleNU.\n\nStatement of InclusivityDocument 6:::\nEmergency Grade Erasure Policy\n\nThe emergency grade erasure policy acknowledges that often times life situations occur that make it impossible to keep up in a course. Do not use this a planning or scheduling device. This is specifically meant to take care of emergencies that happen in your life during the quarter.\n\nYour lowest quiz score (including 0s) is dropped (we keep the best 2 of 3).\n\nYour lowest tutorial score (including 0s) is dropped.\n\nYou may not drop the final tutorial (in Week 10).\n\nYour lowest homework score (including 0s) is dropped.\n\nYour lowest 2 mini-quiz scores (including 0s) are dropped.\n\nYou may NOT drop project scores.\n---\nNow here is the question you need to answer.\n\nQuestion: What is the purpose of edSTEM?\n\n</s>\n<|assistant|>\nThe purpose of edSTEM, as stated in Document 1, is for students to ask questions related to the CS 110 course that can be answered by either Course Staff or other students in the course. It is a Question-and-Answer site similar to Piazza/Campuswire that allows students to seek help and clarification on course content outside of class sessions. Students are encouraged to use edSTEM for issues that are not appropriate for the peer mentors or graduate TA, such as concerns about progress in the course, questions about lecture content, personal matters related to course participation, larger grade concerns, advice about future courses, majors, and internships, among others.", "retrieved_docs": ["Please note, you will need a computer capable of running Python 3+ in order to participate in this course. Any Windows/Mac/Linux computer from the last decade should be fine, however, you may encounter difficulties using a Chromebook, iPad, or other non-standard operating system. If you do not have access to the appropriate computing hardware, please let the course staff know as soon as possible so that we can help you make other arrangements.\n\nIf you are struggling to get Python and your code editor installed, this is (alas) normal (ask any software engineer). This is also one of the reasons why we have such a big course staff: to troubleshoot individual laptop problems with students.\n\nedSTEM\n\nedSTEM is a Question-and-Answer site like Piazza/Campuswire that allows students to ask questions that can then be answered by either Course Staff or other students in the course.", "{:.blockquote-no-margin}\n\nTo register for the course edSTEM (you will only have to do this once), please use the link on Canvas.\n\nFor any other issues that you think are not appropriate for the peer mentors or graduate TA, please talk to Prof. Bain. This might include things like concerns about your progress in the course, questions about content from lectures, personal matters related to your participation in the course, larger grade concerns, advice about future courses, majors, and internships, etc.\n\nSupplementary Materials (optional)\n\nA Practical Introduction to Python Programming, by Brian Heinold\n\nPython for Everyone, by Chuck Severance\n\nHow to think like a Computer Scientist, by Peter Wentworth, Jeffrey Elkner, Allen B. Downey, and Chris Meyers\n\nPolicy on Academic Honesty", "Reminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course\n\nCS 110 is meant as an introduction to the key ideas of computer programming and assumes no prior programming knowledge. In this course, we'll use the programming language Python with two goals: first, we want to give you a sense of the kinds of creative activities, both directed problem-solving and creative pursuits, that programming can support; and two, we want to introduce you to the fundamental constructs (and associated skills and techniques) of computer programming.", "The second goal of the course is to introduce you to the fundamental constructs of computer programming and how to apply these low-level constructs in creative and useful ways. Learning a programming language is not dissimilar to learning a new spoken/written language\u2013first, you need to understand basic rules like grammar and syntax, then you need exemplar buildings blocks like adjectives, nouns, and prepositions, and only then can you use these ideas together to create computer programs. What this means is that you must dedicate enough time to practicing the basics in order to allow yourself to progressively move to more and more complex programming practice.", "Wellness and Mental Health\n\nNorthwestern University is committed to supporting the wellness of our students. Student Affairs has multiple resources to support student wellness and mental health. If you are feeling distressed or overwhelmed, please reach out for help. Students can access confidential resources through the Counseling and Psychological Services (CAPS), Religious and Spiritual Life (RSL) and the Center for Awareness, Response and Education (CARE). Additional information on all of the resources mentioned above can be found here:\n\nhttps://www.northwestern.edu/counseling/\n\nhttps://www.northwestern.edu/religious-life/\n\nhttps://www.northwestern.edu/care/\n\nCourse Materials and Resources\n\nCourse Software", "Accessibility\n\nNorthwestern University is committed to providing the most accessible learning environment as possible for students with disabilities. Should you anticipate or experience disability-related barriers in the academic setting, please contact AccessibleNU to move forward with the university\u2019s established accommodation process (e: accessiblenu@northwestern.edu; p: 847-467-5530). If you already have established accommodations with AccessibleNU, please let me know as soon as possible, preferably within the first two weeks of the term, so we can work together to implement your disability accommodations. Disability information, including academic accommodations, is confidential under the Family Educational Rights and Privacy Act.\n\nAll accommodation requests must be processed through AccessibleNU.\n\nStatement of Inclusivity", "Emergency Grade Erasure Policy\n\nThe emergency grade erasure policy acknowledges that often times life situations occur that make it impossible to keep up in a course. Do not use this a planning or scheduling device. This is specifically meant to take care of emergencies that happen in your life during the quarter.\n\nYour lowest quiz score (including 0s) is dropped (we keep the best 2 of 3).\n\nYour lowest tutorial score (including 0s) is dropped.\n\nYou may not drop the final tutorial (in Week 10).\n\nYour lowest homework score (including 0s) is dropped.\n\nYour lowest 2 mini-quiz scores (including 0s) are dropped.\n\nYou may NOT drop project scores."], "test_settings": "chunk:200_embeddings:thenlper~gte-small_rerank:True_reader-model:zephyr-7b-beta", "eval_score_gpt4": "4", "eval_feedback_gpt4": "Feedback: The response provided is mostly correct and factual, as it correctly identifies edSTEM as a Question-and-Answer site for students to ask questions and get answers from Course Staff or other students. However, the response includes additional details that are not present in the reference answer, such as the encouragement to use edSTEM for issues not appropriate for peer mentors or graduate TAs, and advice about future courses, majors, and internships. These details, while related to the context, are not required to answer the question about the purpose of edSTEM. The response should have been more concise to match the reference answer, which is a straightforward statement about edSTEM's function. Therefore, the response does not fully align with the score 5 criteria of being completely correct, accurate, and factual based on the reference answer."}, {"question": "What days are tutorials held in the programming course?\n", "true_answer": "Tutorials are held on Wednesdays in the programming course.", "source_doc": "/kaggle/input/course-bot-data/documents/cbain_syllabus.md", "generated_answer": "\n<|system|>\nUsing the information contained in the context,\ngive a comprehensive answer to the question.\nRespond only to the question asked, response should be concise and relevant to the question.\nProvide the number of the source document when relevant.\nIf the answer cannot be deduced from the context, do not give an answer.</s>\n<|user|>\nContext:\n\nExtracted documents:\nDocument 0:::\nCourse Format\n\nWhile some of our reserved class periods will be used for interactive lectures where new concepts will be introduced, other days will be reserved for in-depth tutorials where students will be expected to review course materials (recorded lecture videos, slides, and notes) before the class period and during class we will work in small groups to complete an in-depth programming assignment.\n\nThe rough schedule of the course will be (there are some exceptions):\n\nMondays - Lecture Day\n\nWednesdays - Tutorial Day\n\nFridays - Practice Day\n\nFor lecture days, we'll have interactive lectures where we introduce a new topic and focus on building a core understanding. For Tutorial days, you'll work in your tutorial groups to complete an assignment during class time. On Practice+ days, we'll do a little more practice along with previewing the next components of the course.Document 1:::\nMini-Quizzes\n\nThese will be short quizzes for each module of the course that serve as a check of your attendance and/or asynchronous participation in the course. For those that complete the Mini-Quiz in class, you will receive full credit for your attendance and full participation. If you choose to complete the Mini-Quiz remotely, you will need to complete the Canvas version of the quiz within 60 hours of your scheduled class time.\n\nIf you attend class but do not receive credit but don't receive credit, you can fill out this Completion Grade Petition form.\n\nTutorial Grading\n\nThe idea of the Tutorials is to provide you with opportunities to both practice your own programming skill as well as learn to communicate with and help other programmers. As such, these Tutorials will be held on Wednesdays during our scheduled class time during the quarter.Document 2:::\nThese will start the second week of class and you will sign up for a particular Tutorial group at the end of Week 1.\n\nBy completing the tutorials, you will become familiar with the types of strategies you might use to approach problems, write lots of programs, and assess what you know and don't know so that you can know when to ask for more help in lecture or in office hours.\n\nThis course is meant to a be a learning community which requires the dedicated participation of all members. Attendance is required for the first Tutorial, but you may choose to submit future tutorials remotely.Document 3:::\nWhen we assign a pre-recorded lecture, students must watch the video before coming to lecture. Organizationally, some topics/modules span multiple lectures.\n\nTutorial / Study Groups\n\nThe best way to learn how to program is by writing lots of programs. To facilitate this, and to provide a more close-knit learning setting within the context of our larger class, you will each take part in weekly tutorial sessions with one of our Peer Mentors (PMs). You will sign up for a Tutorial Group at the end of the first week of class and then, each week of the quarter, you'll work with your group to complete a tutorial under the guidance of a PM/TA.Document 4:::\nTaking this course means committing \u2014 for 10 weeks \u2014 to attending lectures, tutorials, and office hours, turning in assignments / projects, doing (lots of) practice problems, and most importantly, persevering when things get difficult. Asking questions throughout the class is not a sign of weakness\u2013it shows that you are actively trying to understand what you know and what you do not know. We have an excellent staff of teaching assistants and peer mentors who are here to answer your questions, help you understand course material in different ways, and push you to your fullest learning potential. With your consistent and active participation in learning, you can navigate the material in the course and become a proficient programmer by the end of the quarter.\n\nCourse FormatDocument 5:::\nIf you attend the Tutorial session in-person, work diligently, and make a legitimate attempt (up to the discretion of your Peer Mentor) at completing the assignment, you will receive full-credit. If you choose not to attend in-person, then your assignment will be reviewed for completion and accuracy meaning you may nor may not receive full credit.\n\nIf you attend a tutorial session but do not receive credit, you can fill out this Completion Grade Petition form.\n\nWe will not accept late tutorial submissions.\n\nProject Grading\n\nThere are two larger programming assignments in the course which we will refer to as Projects. These Projects are a significant portion of your course grade and represent quite a bit more work than the usual homework assignments. These assignments will be graded based on a rubric provided with the assignment description.\n\nLate submissions of Projects will not be accepted.Document 6:::\nlayout: two-column title: Syllabus permalink: /syllabus/\n\nTerm Spring 2024 Course COMP_SCI 110: Introduction to Computer Programming Prerequisites None Instructor Prof. Connor Bain (connor.bain@northwestern.edu) Lecture Time Monday, Wednesday, & Friday, 10:00am - 10:50am Lecture Location Lutkin Hall Required Materials Zero Cost Course \u2013 (All course materials are open educational resources)\n\nPlease note that this syllabus is subject to change prior to March 26, 2024.\n\nReminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course\n---\nNow here is the question you need to answer.\n\nQuestion: What days are tutorials held in the programming course?\n\n</s>\n<|assistant|>\nThe tutorials in the programming course are held on Wednesdays during the scheduled class time, as stated in Document 2. (Source: Document 2)", "retrieved_docs": ["Course Format\n\nWhile some of our reserved class periods will be used for interactive lectures where new concepts will be introduced, other days will be reserved for in-depth tutorials where students will be expected to review course materials (recorded lecture videos, slides, and notes) before the class period and during class we will work in small groups to complete an in-depth programming assignment.\n\nThe rough schedule of the course will be (there are some exceptions):\n\nMondays - Lecture Day\n\nWednesdays - Tutorial Day\n\nFridays - Practice Day\n\nFor lecture days, we'll have interactive lectures where we introduce a new topic and focus on building a core understanding. For Tutorial days, you'll work in your tutorial groups to complete an assignment during class time. On Practice+ days, we'll do a little more practice along with previewing the next components of the course.", "Mini-Quizzes\n\nThese will be short quizzes for each module of the course that serve as a check of your attendance and/or asynchronous participation in the course. For those that complete the Mini-Quiz in class, you will receive full credit for your attendance and full participation. If you choose to complete the Mini-Quiz remotely, you will need to complete the Canvas version of the quiz within 60 hours of your scheduled class time.\n\nIf you attend class but do not receive credit but don't receive credit, you can fill out this Completion Grade Petition form.\n\nTutorial Grading\n\nThe idea of the Tutorials is to provide you with opportunities to both practice your own programming skill as well as learn to communicate with and help other programmers. As such, these Tutorials will be held on Wednesdays during our scheduled class time during the quarter.", "These will start the second week of class and you will sign up for a particular Tutorial group at the end of Week 1.\n\nBy completing the tutorials, you will become familiar with the types of strategies you might use to approach problems, write lots of programs, and assess what you know and don't know so that you can know when to ask for more help in lecture or in office hours.\n\nThis course is meant to a be a learning community which requires the dedicated participation of all members. Attendance is required for the first Tutorial, but you may choose to submit future tutorials remotely.", "When we assign a pre-recorded lecture, students must watch the video before coming to lecture. Organizationally, some topics/modules span multiple lectures.\n\nTutorial / Study Groups\n\nThe best way to learn how to program is by writing lots of programs. To facilitate this, and to provide a more close-knit learning setting within the context of our larger class, you will each take part in weekly tutorial sessions with one of our Peer Mentors (PMs). You will sign up for a Tutorial Group at the end of the first week of class and then, each week of the quarter, you'll work with your group to complete a tutorial under the guidance of a PM/TA.", "Taking this course means committing \u2014 for 10 weeks \u2014 to attending lectures, tutorials, and office hours, turning in assignments / projects, doing (lots of) practice problems, and most importantly, persevering when things get difficult. Asking questions throughout the class is not a sign of weakness\u2013it shows that you are actively trying to understand what you know and what you do not know. We have an excellent staff of teaching assistants and peer mentors who are here to answer your questions, help you understand course material in different ways, and push you to your fullest learning potential. With your consistent and active participation in learning, you can navigate the material in the course and become a proficient programmer by the end of the quarter.\n\nCourse Format", "If you attend the Tutorial session in-person, work diligently, and make a legitimate attempt (up to the discretion of your Peer Mentor) at completing the assignment, you will receive full-credit. If you choose not to attend in-person, then your assignment will be reviewed for completion and accuracy meaning you may nor may not receive full credit.\n\nIf you attend a tutorial session but do not receive credit, you can fill out this Completion Grade Petition form.\n\nWe will not accept late tutorial submissions.\n\nProject Grading\n\nThere are two larger programming assignments in the course which we will refer to as Projects. These Projects are a significant portion of your course grade and represent quite a bit more work than the usual homework assignments. These assignments will be graded based on a rubric provided with the assignment description.\n\nLate submissions of Projects will not be accepted.", "layout: two-column title: Syllabus permalink: /syllabus/\n\nTerm Spring 2024 Course COMP_SCI 110: Introduction to Computer Programming Prerequisites None Instructor Prof. Connor Bain (connor.bain@northwestern.edu) Lecture Time Monday, Wednesday, & Friday, 10:00am - 10:50am Lecture Location Lutkin Hall Required Materials Zero Cost Course \u2013 (All course materials are open educational resources)\n\nPlease note that this syllabus is subject to change prior to March 26, 2024.\n\nReminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course"], "test_settings": "chunk:200_embeddings:thenlper~gte-small_rerank:True_reader-model:zephyr-7b-beta", "eval_score_gpt4": "5", "eval_feedback_gpt4": "The response correctly identifies that tutorials are held on Wednesdays, which is in agreement with the reference answer. The response also appropriately cites the source of the information, Document 2, which is not required by the instruction but adds to the accuracy and factual nature of the response. Therefore, the response meets the criteria for a score of 5.\n\nFeedback: The response accurately states that tutorials are held on Wednesdays, which is correct and factual as per the reference answer. The inclusion of the source document is a good practice, although not necessary for this task."}, {"question": "What is the main goal of the course?\n", "true_answer": "The main goal of the course is to introduce students to the fundamental constructs of computer programming and how to apply these low-level constructs in creative and useful ways.", "source_doc": "/kaggle/input/course-bot-data/documents/cbain_syllabus.md", "generated_answer": "\n<|system|>\nUsing the information contained in the context,\ngive a comprehensive answer to the question.\nRespond only to the question asked, response should be concise and relevant to the question.\nProvide the number of the source document when relevant.\nIf the answer cannot be deduced from the context, do not give an answer.</s>\n<|user|>\nContext:\n\nExtracted documents:\nDocument 0:::\nThe second goal of the course is to introduce you to the fundamental constructs of computer programming and how to apply these low-level constructs in creative and useful ways. Learning a programming language is not dissimilar to learning a new spoken/written language\u2013first, you need to understand basic rules like grammar and syntax, then you need exemplar buildings blocks like adjectives, nouns, and prepositions, and only then can you use these ideas together to create computer programs. What this means is that you must dedicate enough time to practicing the basics in order to allow yourself to progressively move to more and more complex programming practice.Document 1:::\nReminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course\n\nCS 110 is meant as an introduction to the key ideas of computer programming and assumes no prior programming knowledge. In this course, we'll use the programming language Python with two goals: first, we want to give you a sense of the kinds of creative activities, both directed problem-solving and creative pursuits, that programming can support; and two, we want to introduce you to the fundamental constructs (and associated skills and techniques) of computer programming.Document 2:::\nStatement of Inclusivity\n\nThis course strives to be an inclusive learning community\u2013respectful of those with differing backgrounds and beliefs. As a community, we aim to be respectful to all learners in this class, regardless of race, ethnicity, socio-economic status, religion, gender identity, or sexual orientation. There will be an optional survey administered at the beginning of the quarter asking you to provide the name and pronouns that you use. This information will be shared with all members of the instructional staff. You are welcome to correct us on your name or preferred pronouns if a mistake is made. If you have concerns, please contact Prof. Bain.\n\nWellness and Mental HealthDocument 3:::\nTaking this course means committing \u2014 for 10 weeks \u2014 to attending lectures, tutorials, and office hours, turning in assignments / projects, doing (lots of) practice problems, and most importantly, persevering when things get difficult. Asking questions throughout the class is not a sign of weakness\u2013it shows that you are actively trying to understand what you know and what you do not know. We have an excellent staff of teaching assistants and peer mentors who are here to answer your questions, help you understand course material in different ways, and push you to your fullest learning potential. With your consistent and active participation in learning, you can navigate the material in the course and become a proficient programmer by the end of the quarter.\n\nCourse FormatDocument 4:::\nThese will start the second week of class and you will sign up for a particular Tutorial group at the end of Week 1.\n\nBy completing the tutorials, you will become familiar with the types of strategies you might use to approach problems, write lots of programs, and assess what you know and don't know so that you can know when to ask for more help in lecture or in office hours.\n\nThis course is meant to a be a learning community which requires the dedicated participation of all members. Attendance is required for the first Tutorial, but you may choose to submit future tutorials remotely.Document 5:::\nOffice Hours\n\nOffice hours are a crucial component of this course. We have a huge team of TAs/peer mentors whose job is to help you to be successful in the course and find your own power as current and future programmers. That said, it's up to you to take the initiative and cultivate a weekly / bi-weekly practice of going to office hours that works for you and your schedule. This looks different for everyone: some people go to 1-2 office hours sessions per week and finish their homework with a TA or peer mentor nearby (if needed). Other students never go to office hours (though this is rare, as the homeworks and projects are challenging). Also, different people connect with different TAs/peer mentors, so do shop around to find a person with whom you work well.Document 6:::\nCourse Grading Policy\n\nYour course grade is calculated as follows:\n\n{:.medium} | Tutorials | 10% | | Mini-Quizzes | 5% | | Homeworks | 25% | | 2 Projects | 25% | | 3 Quizzes | 35% |\n\nThere will be approximately 1 tutorial, 2 mini-quizzes, and 1 assignment (either homework exercise or project) due per week.\n\nFinal grades are assigned on a fixed scale which is set by the registrar's office:\n---\nNow here is the question you need to answer.\n\nQuestion: What is the main goal of the course?\n\n</s>\n<|assistant|>\nThe main goal of the course, as stated in Document 0, is to introduce students to the fundamental constructs of computer programming and how to apply them in creative and useful ways, with the ultimate goal of progressively moving to more complex programming practices after dedicating enough time to practicing the basics. This aligns with the course's second goal, which is to give students a sense of the kinds of creative activities that programming can support. Overall, the course aims to create an inclusive learning community that fosters respect for all learners, prioritizes wellness and mental health, and provides ample opportunities for dedicated participation through tutorials, office hours, and assignments. The course grade is calculated based on a variety of assessments, including tutorials, mini-quizzes, homework exercises, projects, and quizzes.", "retrieved_docs": ["The second goal of the course is to introduce you to the fundamental constructs of computer programming and how to apply these low-level constructs in creative and useful ways. Learning a programming language is not dissimilar to learning a new spoken/written language\u2013first, you need to understand basic rules like grammar and syntax, then you need exemplar buildings blocks like adjectives, nouns, and prepositions, and only then can you use these ideas together to create computer programs. What this means is that you must dedicate enough time to practicing the basics in order to allow yourself to progressively move to more and more complex programming practice.", "Reminder: Tuesday, March 26th is a Northwestern Monday!\n\nAbout the Course\n\nCS 110 is meant as an introduction to the key ideas of computer programming and assumes no prior programming knowledge. In this course, we'll use the programming language Python with two goals: first, we want to give you a sense of the kinds of creative activities, both directed problem-solving and creative pursuits, that programming can support; and two, we want to introduce you to the fundamental constructs (and associated skills and techniques) of computer programming.", "Statement of Inclusivity\n\nThis course strives to be an inclusive learning community\u2013respectful of those with differing backgrounds and beliefs. As a community, we aim to be respectful to all learners in this class, regardless of race, ethnicity, socio-economic status, religion, gender identity, or sexual orientation. There will be an optional survey administered at the beginning of the quarter asking you to provide the name and pronouns that you use. This information will be shared with all members of the instructional staff. You are welcome to correct us on your name or preferred pronouns if a mistake is made. If you have concerns, please contact Prof. Bain.\n\nWellness and Mental Health", "Taking this course means committing \u2014 for 10 weeks \u2014 to attending lectures, tutorials, and office hours, turning in assignments / projects, doing (lots of) practice problems, and most importantly, persevering when things get difficult. Asking questions throughout the class is not a sign of weakness\u2013it shows that you are actively trying to understand what you know and what you do not know. We have an excellent staff of teaching assistants and peer mentors who are here to answer your questions, help you understand course material in different ways, and push you to your fullest learning potential. With your consistent and active participation in learning, you can navigate the material in the course and become a proficient programmer by the end of the quarter.\n\nCourse Format", "These will start the second week of class and you will sign up for a particular Tutorial group at the end of Week 1.\n\nBy completing the tutorials, you will become familiar with the types of strategies you might use to approach problems, write lots of programs, and assess what you know and don't know so that you can know when to ask for more help in lecture or in office hours.\n\nThis course is meant to a be a learning community which requires the dedicated participation of all members. Attendance is required for the first Tutorial, but you may choose to submit future tutorials remotely.", "Office Hours\n\nOffice hours are a crucial component of this course. We have a huge team of TAs/peer mentors whose job is to help you to be successful in the course and find your own power as current and future programmers. That said, it's up to you to take the initiative and cultivate a weekly / bi-weekly practice of going to office hours that works for you and your schedule. This looks different for everyone: some people go to 1-2 office hours sessions per week and finish their homework with a TA or peer mentor nearby (if needed). Other students never go to office hours (though this is rare, as the homeworks and projects are challenging). Also, different people connect with different TAs/peer mentors, so do shop around to find a person with whom you work well.", "Course Grading Policy\n\nYour course grade is calculated as follows:\n\n{:.medium} | Tutorials | 10% | | Mini-Quizzes | 5% | | Homeworks | 25% | | 2 Projects | 25% | | 3 Quizzes | 35% |\n\nThere will be approximately 1 tutorial, 2 mini-quizzes, and 1 assignment (either homework exercise or project) due per week.\n\nFinal grades are assigned on a fixed scale which is set by the registrar's office:"], "test_settings": "chunk:200_embeddings:thenlper~gte-small_rerank:True_reader-model:zephyr-7b-beta", "eval_score_gpt4": "4", "eval_feedback_gpt4": "Feedback: The response correctly identifies the main goal of the course as introducing students to the fundamental constructs of computer programming and applying them in creative and useful ways. It also correctly refers to the course's second goal, which is related to the main goal and provides additional context about the course's inclusive learning community and grading policy. However, the response includes more information than what is necessary to answer the question about the main goal of the course. The reference answer indicates that a concise statement of the main goal is sufficient. Therefore, while the response is accurate regarding the main goal, it is not as concise as the reference answer."}, {"question": "What is the latest time accepted for late homework submissions?\n", "true_answer": "Late homework submissions are accepted up to 48 hours after the original due date with a 15% deduction per 24 hour period.", "source_doc": "/kaggle/input/course-bot-data/documents/cbain_syllabus.md", "generated_answer": "\n<|system|>\nUsing the information contained in the context,\ngive a comprehensive answer to the question.\nRespond only to the question asked, response should be concise and relevant to the question.\nProvide the number of the source document when relevant.\nIf the answer cannot be deduced from the context, do not give an answer.</s>\n<|user|>\nContext:\n\nExtracted documents:\nDocument 0:::\nQuizzes\n\nThere will be three cumulative assessments of your knowledge and practice of the course material administered during our assigned class time (50 minutes). There will be no Final Exam outside of these three quizzes. The tentative dates of these quizzes can be found on our Course Schedule.\n\nNote: because this class is offered by the Computer Science department which is housed in the McCormick School of Engineering, we will still have class during Weinberg's \"Reading Period\".\n\nHomework Grading\n\nHomework will be approximately weekly and is due at the Canvas specified date. You will submit your homework assignments on Canvas.\n\nWe will still accept late homework up to 48 hours after the original due date, with a 15% deduction per 24 hour period.Document 1:::\nNote: If you are found in violation of the Academic Honesty Policy at any point in the course (including misrepresenting your attendance, submitting LLM-generated code, etc.), you will lose access to these policies. This penalty will also apply retroactively meaning that if you were found in violation of our Academic Honesty Policy in Week 10, but used a Late Penalty Waiver in Week 2, your waiver would be retroactively removed.\n\nLate Penalty Waivers\n\nThis applies ONLY to Homeworks and is meant to accommodate students who may have a particular week during the quarter where they are unable to complete the assigned homework on-time. Students may apply (using a Google Form included at the bottom of each assignment) and receive a waiver of the late penalty on homework assignments:\n\nStudents must request the extension via the form at least 24 hours in advance of the homework deadline.Document 2:::\nLate submissions of Projects will not be accepted.\n\nThe second project will be due at the start of the university's assigned final exam block for this course which is March 13th at 3pm.\n\nGrading Equity Policies\n\nThe course is specifically designed to be academically equitable to all students when it comes to assessment and has two special policies related to grading: 1. An emergency erasure policy; 2. A deliberate Late Waiver policy.\n\nThese two policies are provided to accommodate the myriad situations that students encounter over the life cycle of the class (e.g. student org travel, sickness, etc.). This built-in leniency means that there will be no other exceptions to the course syllabus without prior authorization from the Dean of Students at Northwestern. I cannot offer any other leniency, make-up assignments, extensions, etc., outside these policies.Document 3:::\nStudents may not request more than 2 Late Penalty Waivers in a quarter.\n\nThe policy is deliberate in that you, as a student, must actively consider at least 24 hours in advance of the deadline that you will need extra time to complete this assignment. If you find yourself needing extra time on consecutive assignments, this is a good sign that you need to reach out to someone on the Course Staff for help.\n\nThere will be no exceptions to this policy. Once you apply for a valid extension, it cannot be voided.\n\nNo assignments are accepted after 48 hours. This policy does not extend the final due date, it only waives the late penalty.\n\nEmergency Grade Erasure PolicyDocument 4:::\nIf you attend the Tutorial session in-person, work diligently, and make a legitimate attempt (up to the discretion of your Peer Mentor) at completing the assignment, you will receive full-credit. If you choose not to attend in-person, then your assignment will be reviewed for completion and accuracy meaning you may nor may not receive full credit.\n\nIf you attend a tutorial session but do not receive credit, you can fill out this Completion Grade Petition form.\n\nWe will not accept late tutorial submissions.\n\nProject Grading\n\nThere are two larger programming assignments in the course which we will refer to as Projects. These Projects are a significant portion of your course grade and represent quite a bit more work than the usual homework assignments. These assignments will be graded based on a rubric provided with the assignment description.\n\nLate submissions of Projects will not be accepted.Document 5:::\nEmergency Grade Erasure Policy\n\nThe emergency grade erasure policy acknowledges that often times life situations occur that make it impossible to keep up in a course. Do not use this a planning or scheduling device. This is specifically meant to take care of emergencies that happen in your life during the quarter.\n\nYour lowest quiz score (including 0s) is dropped (we keep the best 2 of 3).\n\nYour lowest tutorial score (including 0s) is dropped.\n\nYou may not drop the final tutorial (in Week 10).\n\nYour lowest homework score (including 0s) is dropped.\n\nYour lowest 2 mini-quiz scores (including 0s) are dropped.\n\nYou may NOT drop project scores.Document 6:::\nYou may NOT drop project scores.\n\nIf you choose to drop an assignment early in the quarter only to find yourself in an emergency situation later in the quarter, you will need to reach out to your Dean of Students in order to arrange for flexibility across all of your coursework.\n\nThis policy will be automatically applied at the end of the quarter for all students. No action is required on your part.\n\nAccessibility\n---\nNow here is the question you need to answer.\n\nQuestion: What is the latest time accepted for late homework submissions?\n\n</s>\n<|assistant|>\nAccording to Document 1, late homework submissions will still be accepted up to 48 hours after the original due date, but with a 15% deduction per 24 hour period. Therefore, the latest time accepted for late homework submissions is 48 hours after the original due date. However, it is important to note that students may only apply for a Late Penalty Waiver using the Google Form included at the bottom of each assignment at least 24 hours in advance of the homework deadline. After 48 hours, no assignments will be accepted, and this policy does not extend the final due date, it only waives the late penalty.", "retrieved_docs": ["Quizzes\n\nThere will be three cumulative assessments of your knowledge and practice of the course material administered during our assigned class time (50 minutes). There will be no Final Exam outside of these three quizzes. The tentative dates of these quizzes can be found on our Course Schedule.\n\nNote: because this class is offered by the Computer Science department which is housed in the McCormick School of Engineering, we will still have class during Weinberg's \"Reading Period\".\n\nHomework Grading\n\nHomework will be approximately weekly and is due at the Canvas specified date. You will submit your homework assignments on Canvas.\n\nWe will still accept late homework up to 48 hours after the original due date, with a 15% deduction per 24 hour period.", "Note: If you are found in violation of the Academic Honesty Policy at any point in the course (including misrepresenting your attendance, submitting LLM-generated code, etc.), you will lose access to these policies. This penalty will also apply retroactively meaning that if you were found in violation of our Academic Honesty Policy in Week 10, but used a Late Penalty Waiver in Week 2, your waiver would be retroactively removed.\n\nLate Penalty Waivers\n\nThis applies ONLY to Homeworks and is meant to accommodate students who may have a particular week during the quarter where they are unable to complete the assigned homework on-time. Students may apply (using a Google Form included at the bottom of each assignment) and receive a waiver of the late penalty on homework assignments:\n\nStudents must request the extension via the form at least 24 hours in advance of the homework deadline.", "Late submissions of Projects will not be accepted.\n\nThe second project will be due at the start of the university's assigned final exam block for this course which is March 13th at 3pm.\n\nGrading Equity Policies\n\nThe course is specifically designed to be academically equitable to all students when it comes to assessment and has two special policies related to grading: 1. An emergency erasure policy; 2. A deliberate Late Waiver policy.\n\nThese two policies are provided to accommodate the myriad situations that students encounter over the life cycle of the class (e.g. student org travel, sickness, etc.). This built-in leniency means that there will be no other exceptions to the course syllabus without prior authorization from the Dean of Students at Northwestern. I cannot offer any other leniency, make-up assignments, extensions, etc., outside these policies.", "Students may not request more than 2 Late Penalty Waivers in a quarter.\n\nThe policy is deliberate in that you, as a student, must actively consider at least 24 hours in advance of the deadline that you will need extra time to complete this assignment. If you find yourself needing extra time on consecutive assignments, this is a good sign that you need to reach out to someone on the Course Staff for help.\n\nThere will be no exceptions to this policy. Once you apply for a valid extension, it cannot be voided.\n\nNo assignments are accepted after 48 hours. This policy does not extend the final due date, it only waives the late penalty.\n\nEmergency Grade Erasure Policy", "If you attend the Tutorial session in-person, work diligently, and make a legitimate attempt (up to the discretion of your Peer Mentor) at completing the assignment, you will receive full-credit. If you choose not to attend in-person, then your assignment will be reviewed for completion and accuracy meaning you may nor may not receive full credit.\n\nIf you attend a tutorial session but do not receive credit, you can fill out this Completion Grade Petition form.\n\nWe will not accept late tutorial submissions.\n\nProject Grading\n\nThere are two larger programming assignments in the course which we will refer to as Projects. These Projects are a significant portion of your course grade and represent quite a bit more work than the usual homework assignments. These assignments will be graded based on a rubric provided with the assignment description.\n\nLate submissions of Projects will not be accepted.", "Emergency Grade Erasure Policy\n\nThe emergency grade erasure policy acknowledges that often times life situations occur that make it impossible to keep up in a course. Do not use this a planning or scheduling device. This is specifically meant to take care of emergencies that happen in your life during the quarter.\n\nYour lowest quiz score (including 0s) is dropped (we keep the best 2 of 3).\n\nYour lowest tutorial score (including 0s) is dropped.\n\nYou may not drop the final tutorial (in Week 10).\n\nYour lowest homework score (including 0s) is dropped.\n\nYour lowest 2 mini-quiz scores (including 0s) are dropped.\n\nYou may NOT drop project scores.", "You may NOT drop project scores.\n\nIf you choose to drop an assignment early in the quarter only to find yourself in an emergency situation later in the quarter, you will need to reach out to your Dean of Students in order to arrange for flexibility across all of your coursework.\n\nThis policy will be automatically applied at the end of the quarter for all students. No action is required on your part.\n\nAccessibility"], "test_settings": "chunk:200_embeddings:thenlper~gte-small_rerank:True_reader-model:zephyr-7b-beta", "eval_score_gpt4": "5", "eval_feedback_gpt4": "Feedback: The response provided is completely correct, accurate, and factual. It aligns with the reference answer by stating that late homework submissions are accepted up to 48 hours after the original due date with a 15% deduction per 24 hour period. The response also includes additional relevant information from the context, such as the requirement to apply for a Late Penalty Waiver at least 24 hours in advance of the homework deadline, which supports the accuracy and factual nature of the answer."}]